spring:
  application:
    name: APJF-BE

  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    open-in-view: false

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl.trust: smtp.gmail.com

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: [ openid, profile, email ]
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  servlet:
    multipart:
      max-file-size: 50MB
      max-request-size: 50MB

app:
  jwt:
    jwtSecret: ${JWT_SECRET}
    jwtExpirationMs: ${JWT_EXPIRATION:3600000}
    jwtRefreshExpirationMs: ${JWT_REFRESH_EXPIRATION:604800000}
  oauth2:
    redirectUri: ${OAUTH2_REDIRECT_URI:http://localhost:5173/oauth2/redirect}

integration:
  minio:
    access-key: ${MINIO_ACCESS_KEY}
    secret-key: ${MINIO_SECRET_KEY}
    url: ${MINIO_URL:http://localhost:9000}
    buckets:
      avatar: avatar
      document: document
      course-image: course-image
