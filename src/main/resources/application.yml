spring:
  application:
    name: APJF-BE

  datasource:
    url: ${POSTGRES_URL}
    username: ${POSTGRES_USERNAME}
    password: ${POSTGRES_PASSWORD}
    hikari:
      auto-commit: false
      maximum-pool-size: 12          # đủ cho 5 dev x2 + dư địa
      minimum-idle: 6                # ~50% pool, giữ pool ổn định hơn
      connection-timeout: 30000      # 30s
      idle-timeout: 300000           # 5 phút
      max-lifetime: 420000           # 7 phút (nhỏ hơn timeout TCP Azure LB)
      keepalive-time: 120000         # 2 phút, gửi ping định kỳ để giữ kết nối
      leak-detection-threshold: 60000
      validation-timeout: 5000

      data-source-properties:
        statement_timeout: 30000                   # 30s
        idle_in_transaction_session_timeout: 60000 # 60s
        tcpKeepAlive: true                         # bật TCP keepalive
        socketTimeout: 60                          # cắt đọc treo sau 60s

  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.yaml

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    open-in-view: false
    properties:
      hibernate:
        connection:
          provider_disables_autocommit: true
        jdbc:
          time_zone: UTC
        jdbc.batch_size: 50            # Kích thước batch (số record mỗi lần insert)
        order_inserts: true            # Sắp xếp insert theo entity type, tối ưu batch
        order_updates: true            # Sắp xếp update theo entity type
        batch_versioned_data: true


  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl.trust: smtp.gmail.com

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: [ openid, profile, email ]
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            client-name: Google
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/v2/auth
            token-uri: https://www.googleapis.com/oauth2/v4/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            user-name-attribute: sub

  servlet:
    multipart:
      max-file-size: 8MB
      max-request-size: 8MB

app:
  jwt:
    jwtSecret: ${JWT_SECRET}
    jwtExpirationMs: ${JWT_EXPIRATION:3600000}
    jwtRefreshExpirationMs: ${JWT_REFRESH_EXPIRATION:604800000}
  oauth2:
    redirectUri: ${OAUTH2_REDIRECT_URI:http://localhost:5173/oauth2/redirect}

integration:
  minio:
    access-key: ${MINIO_ACCESS_KEY}
    secret-key: ${MINIO_SECRET_KEY}
    url: ${MINIO_URL:http://localhost:9000}
    buckets:
      avatar: avatar
      document: document
      course-image: course-image
