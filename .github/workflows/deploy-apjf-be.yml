name: Build & Deploy Spring Boot (Docker multi-stage) → ACR → Web App

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
env:
  ACR_NAME: ${{ vars.ACR_NAME }}                        # ex: apjfregistry
  ACR_LOGIN_SERVER: ${{ vars.ACR_LOGIN_SERVER }}        # ex: apjfregistry.azurecr.io
  WEBAPP_NAME: ${{ vars.WEBAPP_NAME }}                  # ex: webapp-apjf-be
  IMAGE_NAME: ${{ vars.IMAGE_NAME }}                    # ex: apjf-be
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Azure login bằng client secret
      - name: Azure login (service principal)
        uses: azure/login@v1
        with:
          creds: >
            {
              "clientId":       "${{ secrets.AZURE_CLIENT_ID }}",
              "clientSecret":   "${{ secrets.AZURE_CLIENT_SECRET }}",
              "subscriptionId": "${{ vars.AZURE_SUBSCRIPTION_ID }}",
              "tenantId":       "${{ secrets.AZURE_TENANT_ID }}"
            }

      - name: Login to ACR
        run: az acr login --name "$ACR_NAME"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build & push image từ Dockerfile multi-stage (JDK 21) của bạn
      - name: Build & Push image to ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          # nếu file không phải tên "Dockerfile" hay không ở root, thêm: file: ./path/Dockerfile
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
          # Cache build (tăng tốc độ)
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Cập nhật Web App sử dụng image mới
      - name: Deploy to Azure Web App (Container)
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.WEBAPP_NAME }}
          images: ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}